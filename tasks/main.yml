---
# tasks file for ansible-role-tripleo-inventory

#required for liberty based deployments
- name: copy get-overcloud-nodes.py to undercloud
  template: >
      src=get-overcloud-nodes.py.j2
      dest={{ working_dir }}/get-overcloud-nodes.py
      mode=0755
  when: inventory == "all"

#required for liberty based deployments
- name: fetch overcloud node names and IPs
  shell: >
      source {{ working_dir }}/stackrc;
      python {{ working_dir }}/get-overcloud-nodes.py
  register: registered_overcloud_nodes
  when: inventory == "all"

- name: list the overcloud nodes
  debug: var=registered_overcloud_nodes.stdout
  when: inventory == "all"

- name: fetch the undercloud ssh key
  fetch: >
    src={{ working_dir }}/.ssh/id_rsa
    dest={{ local_working_dir }}/id_rsa_overcloud
    flat=yes
    mode=0400
  when: inventory == "all"

- name: add each overcloud controller node to ansible
  with_dict: registered_overcloud_nodes.stdout
  ignore_errors: yes
  add_host:
    name={{ item.key }}
    groups=overcloud,controller
    ansible_host={{ item.key }}
    ansible_fqdn={{ item.value }}
    ansible_user="heat-admin"
    ansible_private_key_file="{{ lookup('env', 'PWD') }}/id_rsa_overcloud"
  when: item.key.startswith('overcloud-controller') and inventory == "all"

- name: add each overcloud compute node to ansible
  with_dict: registered_overcloud_nodes.stdout
  ignore_errors: yes
  add_host:
    name={{ item.key }}
    groups=overcloud,compute
    ansible_host={{ item.key }}
    ansible_fqdn={{ item.value }}
    ansible_user="heat-admin"
    ansible_private_key_file="{{ lookup('env', 'PWD') }}/id_rsa_overcloud"
  when: item.key.startswith('overcloud-compute') or item.key.startswith('overcloud-novacompute') and inventory == "all"

- name: add each overcloud ceph node to ansible
  with_dict: registered_overcloud_nodes.stdout
  ignore_errors: yes
  add_host:
    name={{ item.key }}
    groups=overcloud,ceph
    ansible_host={{ item.key }}
    ansible_fqdn={{ item.value }}
    ansible_user="heat-admin"
    ansible_private_key_file="{{ lookup('env', 'PWD') }}/id_rsa_overcloud"
  when: item.key.startswith('overcloud-ceph') and inventory == "all"

- name: add each overcloud swift node to ansible
  with_dict: registered_overcloud_nodes.stdout
  ignore_errors: yes
  add_host:
    name={{ item.key }}
    groups=overcloud,swift
    ansible_host={{ item.key }}
    ansible_fqdn={{ item.value }}
    ansible_user="heat-admin"
    ansible_private_key_file="{{ lookup('env', 'PWD') }}/id_rsa_overcloud"
  when: item.key.startswith('overcloud-objectstorage') and inventory == "all"

#required for regeneration of ssh.config.ansible
- name: set_fact for undercloud ip
  set_fact: undercloud_ip={{ hostvars['undercloud'].undercloud_ip }}

#readd the undercloud to reset the ansible_ssh parameters set in quickstart
- name: Add undercloud vm to inventory
  add_host:
    name: undercloud
    groups: undercloud
    ansible_host: undercloud
    ansible_fqdn: undercloud
    ansible_user: stack
    ansible_private_key_file: "{{ local_working_dir }}/.quickstart/id_rsa_undercloud"
    ansible_ssh_extra_args: '-F "{{ local_working_dir }}/ssh.config.local.ansible"'
    undercloud_ip: "{{ undercloud_ip }}"
  when: hostvars[groups['virthost'][0]].ansible_private_key_file is not defined

#required for regeneration of ssh.config.ansible
- name: set undercloud ssh proxy command
  set_fact: undercloud_ssh_proxy_command="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no
      -o ConnectTimeout=60 -i {{ hostvars[groups['virthost'][0]].ansible_private_key_file }}
      {{ ansible_user }}@{{ hostvars[groups['virthost'][0]].ansible_host }}
      -W {{ undercloud_ip }}:22"
  when: hostvars[groups['virthost'][0]].ansible_private_key_file is defined

#required for regeneration of ssh.config.ansible
- name: set undercloud ssh proxy command
  set_fact: undercloud_ssh_proxy_command="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no
      -o ConnectTimeout=60 -i {{ hostvars['localhost'].ansible_user_dir }}/.quickstart/id_rsa_virt_power
      {{ ansible_user }}@{{ hostvars['localhost'].ansible_default_ipv4.address }}
      -W {{ undercloud_ip }}:22"
  when: hostvars[groups['virthost'][0]].ansible_private_key_file is not defined

- name: create inventory from template
  delegate_to: localhost
  template: >
    src=inventory.j2
    dest="{{ local_working_dir }}/hosts"

- name: regenerate ssh config
  delegate_to: localhost
  template: >
    src=ssh_config.j2
    dest={{ local_working_dir }}/ssh.config.ansible mode=0755

- name: regenerate ssh config for ssh connections from the virthost
  delegate_to: localhost
  template: >
    src=ssh_config_localhost.j2
    dest={{ local_working_dir }}/ssh.config.local.ansible mode=0755
